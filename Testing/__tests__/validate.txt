const validate = (pass)=>{
    const lowercase = "abcdefghijklmnopqrstuvwxyz".split("")
    const upercase = lowercase.map((e)=>e.toUpperCase())
    const  digits = "1234567890".split("")
    if(pass.length<8){
        return{
            status:false,
            message:"min 8 char needed"
        }
    }
    if(!pass.split("").find((e)=>lowercase.includes(e))){
        return{
            status:false,
            message:" Atleast one lowercase needed"
        }
    }
    if(!pass.split("").find((e)=>upercase.includes(e))){
        return{
            status:false,
            message:"Atleast one uppercase needed"
        }
    }
    if(!pass.split("").find((e)=>digits.includes(e))){
        return{
            status:false,
            message:"Atleast one digit is needed"
        }
    }
    return{
        status:true,
        message:"password is valid"
    }   
}
 

module.exports=validate


<-----------------------------validate.js--------------------------->
const {describe,test,expect} = require("@jest/globals")

const validate = require ("../src/index")

describe("Validate Password",function(){
    test("All condition satisfied",function(){
        expect(validate("aaaaaaA1").status).toBe(true)
        expect(validate("aaaaaaA1").message).toBe("password is valid")
    })
    test("min 8 charaters",function(){
        expect(validate("1").status).toBe(false)
        expect(validate("1").message).toBe("min 8 char needed")
    })
})